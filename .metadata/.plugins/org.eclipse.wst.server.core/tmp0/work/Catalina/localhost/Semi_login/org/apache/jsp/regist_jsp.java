/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.41
 * Generated at: 2021-03-28 14:11:33 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class regist_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<script type=\"text/javascript\" src=\"https://code.jquery.com/jquery-latest.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\tfunction idCheck(){\r\n");
      out.write("\t\tvar userName = $(\"#mainId\").val();\r\n");
      out.write("\t\tif($.trim(userName) == \"\" || $.trim(userName) == null){\r\n");
      out.write("\t\t\t$(\"#idmsg\").text(\"아이디를 입력해주세요\")\r\n");
      out.write("\t\t\t$(\"#idmsg\").css(\"color\", \"red\")\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\tvar queryString = \"?command=idCheck&member_id=\"+userName; \r\n");
      out.write("\t\t\t$.ajax({ \r\n");
      out.write("\t\t\t\t\ttype : 'POST', \r\n");
      out.write("\t\t\t\t\turl : 'regist.do'+queryString, \r\n");
      out.write("\t\t\t\t\tsuccess : function(data){\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\tif(data==0){ \r\n");
      out.write("\t\t\t\t\t\t\t$(\"#idmsg\").text(\"사용할 수 있는 아이디입니다.\")\r\n");
      out.write("\t\t\t\t\t\t\t$(\"#idmsg\").css(\"color\", \"blue\"); \r\n");
      out.write("\t\t\t\t\t\t\t$(\"#mainId\").prop(\"title\", \"y\");\r\n");
      out.write("\t\t\t\t\t\t} else if(data==1){ \r\n");
      out.write("\t\t\t\t\t\t\t$(\"#idmsg\").text(\"사용중인 아이디입니다. 다른 아이디를 입력해 주세요\")\r\n");
      out.write("\t\t\t\t\t\t\t$(\"#idmsg\").css(\"color\", \"red\");\r\n");
      out.write("\t\t\t\t\t\t\t$(\"#mainId\").prop(\"title\", \"n\");\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\terror: function(){\r\n");
      out.write("\t\t\t\t\t\t$(\"#idmsg\").text(\"?????\")\r\n");
      out.write("\t\t\t\t\t\t$(\"#idmsg\").css(\"color\", \"red\");\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t}\r\n");
      out.write("\t//수정필요\r\n");
      out.write("\t/*function passwordCheck(){\r\n");
      out.write("\t\tvar pw = $(\"#pw\").val();\r\n");
      out.write("\t\tvar chkpw = $(\"#chkpw\").val();\r\n");
      out.write("\t\tif (chkpw == \"\" && (pw != chkpw || pw == chkpw)){\r\n");
      out.write("\t\t\t$(\".signbtn\").prop(\"disabled\", true);\r\n");
      out.write("            $(\".signbtn\").css(\"background-color\", \"#aaaaaa\");\r\n");
      out.write("            $(\"#chkpw\").css(\"background-color\", \"#FFCECE\");\r\n");
      out.write("\t\t} else if (pw == chkpw){\r\n");
      out.write("\t\t\t$(\"#chkpw\").css(\"background-color\", \"#B0F6AC\");\r\n");
      out.write("            pwdCheck = 1;\r\n");
      out.write("            if(idCheck==1 && pwdCheck == 1) {\r\n");
      out.write("                $(\".signbtn\").prop(\"disabled\", false);\r\n");
      out.write("                $(\".signbtn\").css(\"background-color\", \"#4CAF50\");\r\n");
      out.write("                signupCheck();\r\n");
      out.write("            }\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t} else if (pw != chkpw){\r\n");
      out.write("\t\t\t$(\".signbtn\").prop(\"disabled\", true);\r\n");
      out.write("            $(\".signbtn\").css(\"background-color\", \"#aaaaaa\");\r\n");
      out.write("            $(\"#chkpw\").css(\"background-color\", \"#FFCECE\");\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\t*/\r\n");
      out.write("\tfunction jusoPopup(){\r\n");
      out.write("\t\t//주소검색 수행할 팝업 페이지 호출\r\n");
      out.write("\t\tvar pop = window.open(\"jusoPopup.jsp\",\"pop\", \"width=570, height=420, scrollbars=yes, resizable=yes\");\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t/** API 서비스 제공항목 확대 (2017.02) **/\r\n");
      out.write("\tfunction jusoCallBack(roadFullAddr,roadAddrPart1,addrDetail,roadAddrPart2,engAddr, jibunAddr, zipNo, admCd, rnMgtSn, bdMgtSn\r\n");
      out.write("\t\t\t\t\t\t\t, detBdNmList, bdNm, bdKdcd, siNm, sggNm, emdNm, liNm, rn, udrtYn, buldMnnm, buldSlno, mtYn, lnbrMnnm, lnbrSlno, emdNo){\r\n");
      out.write("\t\t// 팝업페이지에서 주소입력한 정보를 받아서, 현 페이지에 정보를 등록합니다.\r\n");
      out.write("\t\tdocument.form.roadAddrPart1.value = roadAddrPart1;\r\n");
      out.write("\t\tdocument.form.roadAddrPart2.value = roadAddrPart2;\r\n");
      out.write("\t\tdocument.form.addrDetail.value = addrDetail;\r\n");
      out.write("\t\tdocument.form.zipNo.value = zipNo;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\t<h1>회원가입</h1>\r\n");
      out.write("\r\n");
      out.write("\t<form action=\"regist.do\" method=\"post\">\r\n");
      out.write("\t\t<input type=\"hidden\" name=\"command\" value=\"insertuser\" />\r\n");
      out.write("\r\n");
      out.write("\t\t<table border=\"1\">\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<th>아이디</th>\r\n");
      out.write("\t\t\t\t<td><input type=\"text\" id=\"mainId\" name=\"member_id\"\r\n");
      out.write("\t\t\t\t\trequired=\"required\" title=\"n\" onchange=\"idCheck();\"/></td>\r\n");
      out.write("\t\t\t\t<td id=\"idmsg\"></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<th>비밀번호</th>\r\n");
      out.write("\t\t\t\t<td><input type=\"password\" id=\"pw\" name=\"member_pw\"\r\n");
      out.write("\t\t\t\t\trequired=\"required\" oninput=\"passwordCheck()\" /></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<th>비밀번호 확인</th>\r\n");
      out.write("\t\t\t\t<td><input type=\"password\" id=\"chkpw\" oninput=\"passwordCheck()\" />\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<th>이름</th>\r\n");
      out.write("\t\t\t\t<td><input type=\"text\" name=\"member_name\" required=\"required\"\r\n");
      out.write("\t\t\t\t\tonclick=\"idChkProc();\" /></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<th>주소</th>\r\n");
      out.write("\t\t\t\t<td><input type=\"hidden\" id=\"confmKey\" name=\"confmKey\" value=\"\">\r\n");
      out.write("\t\t\t\t\t<input type=\"text\" id=\"zipNo\" name=\"zipNo\" readonly\r\n");
      out.write("\t\t\t\t\tstyle=\"width: 100px\"> <input type=\"button\" value=\"우편번호\"\r\n");
      out.write("\t\t\t\t\tonclick=\"jusoPopup();\"><br /> <input type=\"text\"\r\n");
      out.write("\t\t\t\t\tid=\"roadAddrPart1\" readonly=\"readonly\" /><br /> <input\r\n");
      out.write("\t\t\t\t\ttype=\"text\" id=\"addrDetail\" name=\"member_addr\" value=\"\"></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<th>전화번호</th>\r\n");
      out.write("\t\t\t\t<td><input type=\"text\" name=\"member_phone\" required=\"required\"\r\n");
      out.write("\t\t\t\t\tonclick=\"idChkProc();\" /></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<th>이메일</th>\r\n");
      out.write("\t\t\t\t<td><input type=\"text\" name=\"member_email\" required=\"required\"\r\n");
      out.write("\t\t\t\t\tonclick=\"idChkProc();\" /></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td colspan=\"2\" align=\"right\"><input type=\"submit\" value=\"가입하기\"\r\n");
      out.write("\t\t\t\t\tclass=\"signbtn\" /></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t</form>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
